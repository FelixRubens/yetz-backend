service: match
frameworkVersion: '3'

custom:
  prune:
    automatic: true
    number: 3
provider:
  name: aws
  runtime: nodejs18.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  profile: yetz
  environment:
    GLOBAL_STAGE: ${self:provider.stage}
    DB_HOST: ${file(../../envBase.json):DB_HOST}
    DB_PORT: ${file(../../envBase.json):DB_PORT}
    DB_USER: ${file(../../envBase.json):DB_USER}
    DB_NAME: ${file(../../envBase.json):DB_NAME}
    DB_PASSWORD: ${file(../../envBase.json):DB_PASSWORD}
  timeout: 10
  memorySize: 1024

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - sqs:SendMessage
        - sqs:ReceiveMessage
        - sqs:DeleteMessageBatch
        - sqs:DeleteMessage
      Resource: '*'

functions:
  createMatch:
    handler: createMatch.handler
    events:
    - http:
        path: services/match/createMatch
        method: post
        integration: lambda
        cors: true
        response:
          headers:
            Content-Type: "'application/json'"

plugins:
  - serverless-prune-plugin  