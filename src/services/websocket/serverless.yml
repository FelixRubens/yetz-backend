service: websocket
frameworkVersion: '3'

custom:
  prune:
    automatic: true
    number: 3

provider:
  name: aws
  runtime: nodejs18.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  profile: yetz
  environment:
    GLOBAL_STAGE: ${self:provider.stage}
    DB_HOST: ${file(../../envBase.json):DB_HOST}
    DB_PORT: ${file(../../envBase.json):DB_PORT}
    DB_USER: ${file(../../envBase.json):DB_USER}
    DB_NAME: ${file(../../envBase.json):DB_NAME}
    DB_PASSWORD: ${file(../../envBase.json):DB_PASSWORD}
  timeout: 10
  memorySize: 1024

functions:
  connect:
    handler: connect.handler
    events:
      - websocket:
          route: $connect

  disconnect:
    handler: disconnect.handler
    events:
      - websocket:
          route: $disconnect

  default:
    handler: default.handler
    events:
      - websocket:
          route: $default

  connectionId:
    handler: connectionId.handler
    events:
      - websocket:
          route: connectionId

  keepAlive:
    handler: keepAlive.handler
    events:
      - websocket:
          route: keepAlive

resources:
  Resources:
    WebsocketDashboardQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: websocket_queue
        VisibilityTimeout: 300
        SqsManagedSseEnabled: false
    
    SQSRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                  - sts:AssumeRole

    WsSQSRolePolices:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: WsSQSRole_Police
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:DeleteMessageBatch
              Resource: [
                { Fn::GetAtt: [ WebsocketDashboardQueue, Arn ] }
              ]
        Roles: [{ Ref: SQSRole }]

plugins:
  - serverless-prune-plugin